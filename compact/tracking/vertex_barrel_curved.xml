<!-- SPDX-License-Identifier: LGPL-3.0-or-later -->
<!-- Copyright (C) 2022 Sylvester Joosten, Whitney Armstrong, Shujie Li -->

<lccdd>
  <define>
    <comment>
      Main parameters
    </comment>

    <constant name="VertexBarrelMod_length" value="VertexBarrel_length" />
    <constant name="VertexBarrelMod_rmin" value="VertexBarrel_rmin" />

    <constant name="SiVertexSensor_thickness" value="40*um" />
    <!-- <constant name="SiVertexSensor_thickness" value="1*mm" /> -->
    <comment>
      each RSU contains four tiles (2x2), along with backbone, biasing, and readout.
      The width and length (along z) are given below. modifying them without changing
      the other dimensions in SVTBarrelTracker_geo.cpp may introduce inconsistency.
      Tile thickness is set to be SiVertexSensor_thickness in frame. Use dummy for the total thickness calculation.       
    </comment>
    <constant name="RSU_width"   value="19.564*mm" />
    <constant name="RSU_length"  value="21.666*mm" />
    <constant name="Tile_width"  value="9.197*mm"/>
    <constant name="Tile_length" value="10.773*mm"/>
    <constant name="Tile_thickness_dummy" value="0*mm"/>

    <constant name="VertexBarrelMod1_rmin" value="VertexBarrelMod_rmin" />
    <constant name="VertexBarrelMod2_rmin" value="VertexBarrelMod_rmin + 1.2*cm" />
    <constant name="VertexBarrelMod3_rmin" value="12.0*cm" />

    <comment> ensure we are within the vertex envelope with some margin. </comment>
    <constant name="VertexCheck" value="sqrt(VertexBarrel_rmax - VertexBarrelMod3_rmin - .1*cm)" />

    <documentation>
      - Currently there are 3 sensor layers. Each is composed of 2 half-cylinders modules with only
      40um of silicon thickness.
      - Both support shells are 300um thick, implemented as the integrated tracker support/service
      setup

    </documentation>

    <constant name="VertexBarrelEnvelope_length" value="VertexTrackingRegion_length" />
    <constant name="VertexBarrelLayer_length" value="VertexBarrelMod_length + 1*um" />

    <constant name="VertexBarrelLayer_thickness" value="0.2*cm" />
    <constant name="VertexBarrelMod_thickness" value="0.1*cm" />

    <comment> rmin are set to accommodate 12,16,and 40 RSU rows in phi </comment>

    <!-- <constant name="VertexBarrelLayer0_rmin"        value="VertexBarrelMod1_rmin -
    VertexBarrelLayer_thickness/2.0"/> -->
    <constant name="VertexBarrelLayer0_rmin" value="RSU_width*12/2/Pi" />
    <constant name="VertexBarrelLayer0_rmax"
      value="VertexBarrelLayer0_rmin + VertexBarrelLayer_thickness" />
    <!-- <constant name="VertexBarrelLayer1_rmin"        value="VertexBarrelMod2_rmin -
    VertexBarrelLayer_thickness/2.0"/> -->
    <constant name="VertexBarrelLayer1_rmin" value="RSU_width*16/2/Pi" />
    <constant name="VertexBarrelLayer1_rmax"
      value="VertexBarrelLayer1_rmin + VertexBarrelLayer_thickness" />
    <!-- <constant name="VertexBarrelLayer2_rmin"        value="VertexBarrelMod3_rmin -
    VertexBarrelLayer_thickness/2.0"/> -->
    <constant name="VertexBarrelLayer2_rmin" value="RSU_width*40/2/Pi" />
    <constant name="VertexBarrelLayer2_rmax"
      value="VertexBarrelLayer2_rmin + VertexBarrelLayer_thickness" />
  </define>

  <detectors>
    <documentation level="5">
      ### Actual detectors
    </documentation>
    <detector
      id="VertexBarrel_0_ID"
      name="VertexBarrel"
      type="epic_CylinderSVTBarrel"
      readout="VertexBarrelHits"
      insideTrackingVolume="true">
      <type_flags type="DetType_TRACKER + DetType_BARREL" />
      <comment>
        The thickness of the detector volume is calculated to accommodate all components
      </comment>
      <dimensions
       length="VertexBarrelEnvelope_length" z0="0" />
       <comment>Vertex Barrel Modules</comment>
       <comment>
        Tile components will be ignored if no frame (RSU) is provided.
        width and length in component will be ignored for non-tiles. 
      </comment>
      <module name="L0" vis="VertexLayerVis" rmin="VertexBarrelLayer0_rmin" width="RSU_width" length="RSU_length">
        <frame name="RSUFrame" vis="VertexSupportLayerVis" material="Silicon"
              thickness="SiVertexSensor_thickness" />
        <module_component name="UpperLeftTile"
          sensitive="true" vis="VertexLayerVis" material="Silicon"
          width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
        />
        <module_component name="UpperRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerLeftTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
      </module>
      <module name="L1" vis="VertexLayerVis" rmin="VertexBarrelLayer1_rmin" width="RSU_width" length="RSU_length">
        <frame name="RSUFrame" vis="VertexSupportLayerVis" material="Silicon"
              thickness="SiVertexSensor_thickness" />
        <module_component name="UpperLeftTile"
          sensitive="true" vis="VertexLayerVis" material="Silicon"
          width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
        />
        <module_component name="UpperRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerLeftTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
      </module>
      <module name="L2" vis="VertexLayerVis" rmin="VertexBarrelLayer2_rmin" width="RSU_width" length="RSU_length">
        <frame name="RSUFrame" vis="VertexSupportLayerVis" material="Silicon"
              thickness="SiVertexSensor_thickness" />
        <module_component name="UpperLeftTile"
          sensitive="true" vis="VertexLayerVis" material="Silicon"
          width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
        />
        <module_component name="UpperRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerLeftTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
        <module_component name="LowerRightTile"
        sensitive="true" vis="VertexLayerVis" material="Silicon"
        width="Tile_width" length="Tile_length" thickness="Tile_thickness_dummy"
      />
      </module>
     

      <comment> Layers composed of many arrayed modules </comment>
      <layer module="L0" id="0" vis="VertexLayerVis">
        <barrel_envelope
          inner_r="VertexBarrelLayer0_rmin-1*mm"
          outer_r="VertexBarrelLayer0_rmax"
          z_length="VertexBarrelLayer_length" />
        <layer_material surface="inner" binning="binPhi,binZ" bins0="100" bins1="100" />
        <layer_material surface="outer" binning="binPhi,binZ" bins0="100" bins1="100" />
        <comment>
          phi0 : Starting phi of first module in rphi plane.
          zstart : starting z of the first module in z, default = barrel_start
        </comment>
        <rphi_layout phi0="0.0" />
        <z_layout />
      </layer>

      <layer module="L1" id="1" vis="VertexLayerVis">
        <barrel_envelope
          inner_r="VertexBarrelLayer1_rmin-1*mm"
          outer_r="VertexBarrelLayer1_rmax"
          z_length="VertexBarrelLayer_length" />
        <layer_material surface="inner" binning="binPhi,binZ" bins0="100" bins1="100" />
        <layer_material surface="outer" binning="binPhi,binZ" bins0="100" bins1="100" />
        <comment>
          phi0 : Starting phi of first module.
          zstart : starting z of the first module in z, default = barrel_start
        </comment>
        <rphi_layout phi0="0.0" />
        <z_layout />
      </layer>

      <layer module="L2" id="2" vis="VertexLayerVis">
        <barrel_envelope
          inner_r="VertexBarrelLayer2_rmin-1*mm"
          outer_r="VertexBarrelLayer2_rmax"
          z_length="VertexBarrelLayer_length" />
        <layer_material surface="inner" binning="binPhi,binZ" bins0="100" bins1="100" />
        <layer_material surface="outer" binning="binPhi,binZ" bins0="100" bins1="100" />
        <comment>
          phi0 : Starting phi of first module.
          zstart : starting z of the first module in z, default = barrel_start
        </comment>
        <rphi_layout phi0="0.0" />
        <z_layout />
      </layer>
    </detector>
  </detectors>

  <plugins>
    <plugin name="DD4hep_ParametersPlugin">
      <argument value="VertexBarrel" />
      <argument value="layer_pattern: str=VertexBarrel_layer\d" />
    </plugin>
  </plugins>

  <readouts>
      <readout name="VertexBarrelHits"> 
        <segmentation type="MultiSegmentation" key="layer">
        <segmentation name="L0" type="CylindricalGridPhiZ" key_value="0" grid_size_phi="0.02*mm/VertexBarrelLayer0_rmin" grid_size_z="0.02*mm" radius="VertexBarrelLayer0_rmin+SiVertexSensor_thickness/2.0" />
        <segmentation name="L1" type="CylindricalGridPhiZ" key_value="1" grid_size_phi="0.02*mm/VertexBarrelLayer1_rmin" grid_size_z="0.02*mm" radius="VertexBarrelLayer1_rmin+SiVertexSensor_thickness/2.0" />
        <segmentation name="L2" type="CylindricalGridPhiZ" key_value="2" grid_size_phi="0.02*mm/VertexBarrelLayer2_rmin" grid_size_z="0.02*mm" radius="VertexBarrelLayer2_rmin+SiVertexSensor_thickness/2.0" />
      </segmentation>
      <id>system:8,layer:4,module:12,sensor:3,phi:30:-18,z:-16</id>
    </readout>
  </readouts>

</lccdd>